" vim: foldmethod=marker
"
set nocompatible              " be iMproved, required
filetype off                  " required

call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

Plug 'ycm-core/YouCompleteMe'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

" Plug 'jceb/vim-orgmode', { 'tag': 'v0.6.0' }
" Plug 'tpope/vim-speeddating', { 'tag': 'v20151024' }

Plug 'preservim/nerdtree'
Plug 'preservim/nerdcommenter'

Plug 'honza/vim-snippets'
Plug 'SirVer/ultisnips'

Plug 'Yggdroot/indentLine'

Plug 'godlygeek/tabular'
Plug 'preservim/vim-markdown'

" {{{ Filetypes
Plug 'cespare/vim-toml'
Plug 'ekalinin/Dockerfile.vim'
Plug 'Glench/Vim-Jinja2-Syntax'
Plug 'marshallward/vim-restructuredtext'
Plug 'martinda/Jenkinsfile-vim-syntax'
" }}}

" {{{ JavaScript
Plug 'pangloss/vim-javascript'
Plug 'HerringtonDarkholme/yats.vim'  " Yet Another TypeScript Syntax
" }}}
" {{{ Python
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'vim-python/python-syntax'
" }}}

Plug 'chriskempson/base16-vim'
Plug 'joshdick/onedark.vim'
call plug#end()

set encoding=UTF-8
filetype plugin on

syn on
filetype plugin indent on
set background=dark
set cinoptions+=(0
set expandtab
set foldmethod=manual  " Set concrete method for individual file type below
set foldlevel=1
set guioptions-=T
set laststatus=2
set listchars=eol:$,tab:>-,trail:.
set nohlsearch
set nonumber
set ruler
set smartindent
set t_Co=256
set tabstop=4

let mapleader=","

set termguicolors
let base16colorspace=256

colorscheme onedark

" {{{ Key bindings
nnoremap                <F3>              /<c-r><c-w>

" Bindings for tabs
nnoremap <silent>       <leader>th      :tabfirst<CR>
nnoremap <silent>       <leader>tk      :tabnext<CR>
nnoremap <silent>       <leader>tj      :tabprev<CR>
nnoremap <silent>       <leader>tl      :tablast<CR>
nnoremap                <leader>tt      :tabedit<Space>
nnoremap <silent>       <leader>tn      :tabnext<Space>
nnoremap <silent>       <leader>tm      :tabm<Space>
nnoremap <silent>       <leader>td      :tabclose<CR>

nnoremap <silent>       <leader>w       :w<CR>
nnoremap <silent>       <leader>ck      :cclose<CR>
nnoremap <silent>       <leader>cn      :cnext<CR>
nnoremap <silent>       <leader>co      :copen<CR>
nnoremap                <leader>vg      :vimgrep<SPACE>/<C-R><C-W>/<SPACE>**/*.*
nnoremap <silent>       <leader>er      :vsplit ~/.vimrc<CR>
nnoremap                <leader>ccs     :colorscheme<SPACE>
nnoremap <silent>       <ESC><ESC>      :nohlsearch<CR>

nnoremap                <leader>h       :h<SPACE><C-r><C-w>
" Copy file path in current buffer
nnoremap <silent>       <leader>cfp     :let @+ = expand("%")<CR>
" }}}

" {{{ NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$', '\.swp', '\.venv', '\.vscode', '\.idea', '\.git$']
let NERDTreeShowHidden=1

nnoremap <silent>       <C-\>           :NERDTreeToggle<CR>
" Reveal current file in the NERDTree
nnoremap <silent>       <leader>rf      :NERDTreeFind<CR>
" }}}

autocmd BufRead,BufNewFile *.py set foldmethod=indent
autocmd BufRead,BufNewFile *.py set foldlevel=1

autocmd BufRead,BufNewFile *.sh set shiftwidth=4
autocmd BufRead,BufNewFile *.sh set tabstop=4

" {{{ fzf
nnoremap <silent>       <leader>fb      :Buffers<CR>
nnoremap <silent>       <leader>gbc     :BCommits<CR>
nnoremap <silent>       <leader>gc      :Commits<CR>
nnoremap <silent>       <leader>ff      :Files<CR>
nnoremap <silent>       <leader>ft      :Tags<CR>
nnoremap <silent>       <leader>rg      :Rg<SPACE>
" }}}

" {{{ nerdcommenter
let g:NERDDefaultAlign = 'left'
let g:NERDSpaceDelims = 1
" }}}

" {{{ YouCompleteMe
" Following three configs make it compatible with the UltiSnips to work well.
" let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
" let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
" let g:SuperTabDefaultCompletionType = '<C-n>'
let g:ycm_enable_semantic_highlighting=1
" TODO: add bash langserver
let g:ycm_language_server = [
  \   {
  \     'name': 'python',
  \     'cmdline': [expand('~/npm/node_modules/.bin/pyright-langserver'), '--stdio'],
  \     'filetypes': ['python'],
  \   },
  \ ]

nnoremap <silent>       gd           :YcmCompleter GoTo<CR>
" }}}

" {{{ UltiSnips
" let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
" let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
" let g:SuperTabDefaultCompletionType = '<C-n>'

" let g:UltiSnipsSnippetDirectories=["UltiSnips", "custom-snippets"]
" let g:UltiSnipsEditSplit="vertical"
" let g:UltiSnipsExpandTrigger="<tab>"
" let g:UltiSnipsJumpForwardTrigger="<c-b>"
" let g:UltiSnipsJumpBackwardTrigger="<c-z>"
" }}}

let g:vim_markdown_conceal = 0
let g:vim_markdown_conceal_code_blocks = 0
let g:vim_markdown_fenced_languages = ['python=python']
" let g:vim_markdown_folding_level = 2
let g:vim_markdown_folding_style_pythonic = 1

