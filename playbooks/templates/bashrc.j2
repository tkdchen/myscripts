# vim: foldmethod=marker ts=4 sw=4 autoindent
# .bashrc

if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

. /usr/share/git-core/contrib/completion/git-prompt.sh
. ~/.bashrc.common

# User specific environment

# This requires the /var mount point has enough disk space as a main storage
# for the system.
# Ensure it is writable by the user.
export VAGRANT_HOME="{{ vagrant_home }}"
if [ ! -e "$VAGRANT_HOME" ]; then
    echo "${VAGRANT_HOME} does not exist."
    echo "Create it before using vagrant and ensure it is accessible."
fi

export DENO_INSTALL="{{ ansible_user_dir }}/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

# Added when starting to use a fresh Fedora 33 on new ThinkPad
# What I did: install ibus manually and launch ibus-daemon manually.
export GTK_IM_MODULE=ibus
export QT_IM_MODULE=ibus
export XMODIFIERS=@im=ibus

export REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt

alias ff='firefox'

#alias docker=podman

alias pacup='sudo dnf update'
alias paci='sudo dnf install'
alias pacq='sudo dnf repoquery'

alias di='docker images'

alias my-bodhi-updates='bodhi updates query --user {{ fedora_username }}'

alias onedrive-sync='onedrive --synchronize --verbose'

function q-connect-network
{
    local -r networkname=$(nmcli --fields name c show | sed '1 d' | sed -e 's/ \+$//' | dmenu_go)
    [[ -n "$networkname" ]] && nmcli --ask c up "$networkname"
}

function q-notes-open
{
    local -r notefile=$(find $HOME/Documents/My/notes/ -name "*.org" -exec basename '{}' \; | dmenu_go)
    [[ -n "$notefile" ]] && emacs "$HOME/Documents/My/notes/$notefile" &
}

function pypi-mirrors-list
{
    declare -a fast_pypi_mirros
    fast_pypi_mirros='https://pypi.tuna.tsinghua.edu.cn/simple
https://mirrors.aliyun.com/pypi/simple/
https://pypi.doubanio.com/simple
https://mirrors.cloud.tencent.com/pypi/simple
'
    echo "$fast_pypi_mirros" | dmenu_go
}

source "$HOME/.cargo/env"

export VAGRANT_LIBVIRT_IMAGES="{{ vagrant_libvirt_images_dir }}"
if [ ! -e "${VAGRANT_LIBVIRT_IMAGES}" ]; then
    echo "${VAGRANT_LIBVIRT_IMAGES} does not exist."
    echo "Create it before using vagrant with libvirt and ensure it is accessible."
fi
